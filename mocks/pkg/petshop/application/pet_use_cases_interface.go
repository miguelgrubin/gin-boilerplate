// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	application "github.com/miguelgrubin/gin-boilerplate/pkg/petshop/application"
	domain "github.com/miguelgrubin/gin-boilerplate/pkg/petshop/domain"

	mock "github.com/stretchr/testify/mock"

	shared "github.com/miguelgrubin/gin-boilerplate/pkg/shared"
)

// PetUseCasesInterface is an autogenerated mock type for the PetUseCasesInterface type
type PetUseCasesInterface struct {
	mock.Mock
}

// Creator provides a mock function with given fields: _a0
func (_m *PetUseCasesInterface) Creator(_a0 application.PetCreatorParams) (domain.Pet, error) {
	ret := _m.Called(_a0)

	var r0 domain.Pet
	if rf, ok := ret.Get(0).(func(application.PetCreatorParams) domain.Pet); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(domain.Pet)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(application.PetCreatorParams) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Deleter provides a mock function with given fields: _a0
func (_m *PetUseCasesInterface) Deleter(_a0 shared.EntityId) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(shared.EntityId) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Finder provides a mock function with given fields: _a0
func (_m *PetUseCasesInterface) Finder(_a0 application.PetFinderParams) ([]domain.Pet, error) {
	ret := _m.Called(_a0)

	var r0 []domain.Pet
	if rf, ok := ret.Get(0).(func(application.PetFinderParams) []domain.Pet); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Pet)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(application.PetFinderParams) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Showher provides a mock function with given fields: _a0
func (_m *PetUseCasesInterface) Showher(_a0 shared.EntityId) (domain.Pet, error) {
	ret := _m.Called(_a0)

	var r0 domain.Pet
	if rf, ok := ret.Get(0).(func(shared.EntityId) domain.Pet); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(domain.Pet)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(shared.EntityId) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Updater provides a mock function with given fields: _a0, _a1
func (_m *PetUseCasesInterface) Updater(_a0 shared.EntityId, _a1 application.PetUpdatersParams) (domain.Pet, error) {
	ret := _m.Called(_a0, _a1)

	var r0 domain.Pet
	if rf, ok := ret.Get(0).(func(shared.EntityId, application.PetUpdatersParams) domain.Pet); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(domain.Pet)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(shared.EntityId, application.PetUpdatersParams) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
